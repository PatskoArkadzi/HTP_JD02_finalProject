<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<http use-expressions="true">
		<!-- <intercept-url pattern="/cinema/newapp/user/**"
			access="hasAnyRole('admin', 'user')" /> -->
		<intercept-url pattern="/cinema/newapp/user/chooseSeat"
			access="hasRole('admin', 'user',)" />
		<intercept-url pattern="/cinema/newapp/admin/**"
			access="hasRole('admin')" />
		<form-login login-processing-url="/j_spring_security_check"

			login-page="/login" default-target-url="/newapp/user/"
			username-parameter="username" password-parameter="password"
			authentication-failure-url="/newapp/user/error?error=true" />

		<!-- authentication-failure-url="/error.jsp?error=There is no user with 
			such login" -->
		<csrf disabled="true" />
		<logout logout-url="/j_spring_security_logout"
			logout-success-url="/newapp/user/" />
		<anonymous username="guest" granted-authority="ROLE_GUEST" />
	</http>

	<b:bean name="userDetailsService"
		class="by.htp.cinema.service.impl.CustomUserDetailsServiceImpl">
		<b:property name="userDao">
			<b:bean class="by.htp.cinema.dao.impl.UserDaoHibernateImpl"></b:bean>
		</b:property>
	</b:bean>
	<authentication-manager>
		<authentication-provider
			user-service-ref="userDetailsService">
			<!-- <user-service> <user name="admin" password="admin" authorities="ROLE_ADMIN, 
				ROLE_USER" /> <user name="user" password="user" authorities="ROLE_USER" /> 
				</user-service> -->

			<!-- <jdbc-user-service data-source-ref="dataSource" users-by-username-query=" 
				SELECT login, email, password, role_id FROM users WHERE login = ?;" authorities-by-username-query=" 
				SELECT users.login, roles.roleName as authorities FROM users, roles WHERE 
				users.login = ? AND roles.id = users.role_id;" /> -->
		</authentication-provider>
	</authentication-manager>

</b:beans>